apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {

    dexOptions {
        jumboMode = true
    }

    signingConfigs {
        joke {
            storeFile file(STOREFILE)
            storePassword STOREPASS
            keyAlias = KEYALIAS
            keyPassword KEYPASS
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.east.buglyhotfix"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        ndk {
            //设置支持的SO库架构，如果不涉及到so库的更新和错误日志上传可以取消
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
        multiDexKeepProguard file("tinkerMultidexKeep.pro") //keep specific classes using proguard syntax

    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.joke
        }
    }

    compileOptions{
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'com.east:xgutils:0.2.30'

    implementation "androidx.multidex:multidex:2.0.1"

    // 远程仓库集成方式（推荐）
    //compile 'com.tencent.bugly:crashreport_upgrade:1.3.8'
    implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //1. 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    //2.为了便于解答问题，这里的tinker版本建议跟随此处demo设置，如果微信更新了tinker版本，bugly会定期同步更新
    implementation "com.tencent.tinker:tinker-android-lib:${TINKER_VERSION}"
}

// 依赖插件脚本
apply from: 'tinker-support.gradle'